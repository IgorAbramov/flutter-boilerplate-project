name: boilerplate
description: A flutter boilerplate project created using MobX and Provider.

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# Read more about versioning at semver.org.
version: 1.0.0+1

environment:
  sdk: ">=2.10.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter
  flutter_cupertino_localizations: ^1.0.1

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.0

  # The following adds the shared pref as a dependency in your application
  shared_preferences: ^0.5.12

  # Firebase plugins to use Google cloud storage and functions
  firebase_core: ^0.5.0+1
  firebase_auth: ^0.18.1+2
  google_sign_in: ^4.5.4
  cloud_firestore: ^0.14.1+3
  firebase_storage: ^4.0.1
  cloud_functions: ^0.6.0+1
  firebase_messaging: ^7.0.3

  # Plugin to control the size of widget/text for multiple screen resolutions
  flutter_screenutil: ^3.1.1

  # A composable, Future-based library for making HTTP requests.
  http: ^0.12.2

  #Network checking tool
  data_connection_checker: ^0.3.4

  # The following adds the launcher icon support to your application.
  # run below mentioned commands to generate launcher icons
  # flutter packages get
  # flutter packages pub run flutter_launcher_icons:main
  flutter_launcher_icons: ^0.8.1

  # Flogs, a powerful logging framework
  f_logs: ^1.2.2

  # MobX is a library for reactively managing the state of your applications. Use the power of
  # observables, actions, and reactions to supercharge your Dart and Flutter apps.
  #This project uses inject library that works with code generation, execute the following command to generate files:
  #   flutter packages pub run build_runner build --delete-conflicting-outputs
  # or watch command in order to keep the source code synced automatically:
  #   flutter packages pub run build_runner watch
  mobx: ^1.2.1+3
  flutter_mobx: ^1.1.0+2
  mobx_codegen: ^1.1.1+1

  # An helper to easily exposes a value using InheritedWidget without having to write one.
  provider: ^4.3.2+2

  # String validation and sanitization for Dart. Dart 2-compatible version of validator
  validators: ^2.0.1

  # A powerful Http client for Dart
  dio: ^3.0.10

  # This package provides internationalization and localization facilities, including message
  # translation, plurals and genders, date/number formatting and parsing, and bidirectional text.
  intl: ^0.16.1

  # A flexible widget for user notification.
  flushbar:

    git:

      url: https://github.com/valterh4ck3r/flushbar.git

  # Material Dialog
  material_dialog: ^0.0.9

  # Dependency injection
  inject:
    git:
      url: https://github.com/google/inject.dart.git
      path: package/inject
      ref: 7c3cbf6

dev_dependencies:
  flutter_test:
    sdk: flutter

  # Stable version ^3.4.1
  json_serializable: ^3.4.1
  source_gen: ^0.9.7+1

  # Stable version ^0.39.12
  analyzer: ^0.39.12

  # Stable version ^1.10.2
  build_runner: ^1.10.2
  inject_generator:
    git:
      url: https://github.com/google/inject.dart.git
      path: package/inject_generator
      ref: 7c3cbf6

flutter_icons:
  image_path: "assets/icons/ask_pro_icon.png"
  android: true
  ios: true


# For information on the generic Dart part of this file, see the
# following page: https://www.dartlang.org/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
  - assets/images/
  - assets/icons/
  - assets/lang/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.io/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.io/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
  - family: ProductSans
    fonts:
    - asset: assets/fonts/Product-Sans-Regular.ttf
    - asset: assets/fonts/Product-Sans-Italic.ttf
      style: italic
    - asset: assets/fonts/Product-Sans-Bold.ttf
      weight: 700

  # For details regarding fonts from package dependencies,
  # see https://flutter.io/custom-fonts/#from-packages
